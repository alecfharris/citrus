{"version":3,"sources":["components/Logo/citrus-logo.svg","utils/API.js","components/FridgeEntry/index.js","components/FridgeList/inventory.js","components/StatusIcon/index.js","components/FridgeItem/index.js","components/FridgeInfo/index.js","components/FridgeList/index.js","components/Fridge/style.js","components/NavDrawer/index.js","components/NavBar/index.js","components/Fridge/index.js","components/Browse/style.js","components/BrowseRecipeCard/index.js","components/Browse/index.js","components/Welcome/style.js","components/Button/index.js","components/Logo/style.js","components/Logo/index.js","components/WelcomeText/style.js","components/WelcomeText/index.js","components/Welcome/index.js","components/Login/style.js","components/GoogleSignIn/index.js","components/FacebookLogin/index.js","components/Login/index.js","components/Home/style.js","components/Home/index.js","components/RecipeInput/index.js","components/EnterRecipe/style.js","components/EnterRecipe/index.js","components/RecipeInformation/style.js","components/RecipeIngredient/index.js","components/RecipeInstruction/style.js","components/RecipeInstruction/index.js","components/RecipeInformation/index.js","components/RecipePage/style.js","components/RecipePage/recipe-test.js","components/RecipePage/index.js","components/SearchByIngredient/style.js","components/SelectFridge/index.js","components/SearchByIngredient/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","API","getRecipes","axios","get","getRecipe","id","concat","deleteRecipe","delete","saveRecipe","recipeData","post","saveAPIRecipe","getFridge","saveFridge","theme","createMuiTheme","palette","primary","main","secondary","FridgeEntry","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","quantity","unit","date","console","log","handleChange","event","setState","defineProperty","target","value","bind","assertThisInitialized","intervalIsSet","interval","setInterval","getDataFromDb","_this$state","classes","react_default","a","createElement","styles","Card_default","className","container","CardContent_default","Typography_default","title","color","card","noValidate","autoComplete","TextField_default","label","textField","onChange","margin","variant","Button_default","size","button","React","Component","withStyles","root","width","maxWidth","background","display","flexWrap","justifyContent","fontSize","padding","Inventory","fridge","status","purchaseDate","green","yellow","red","Icon","height","xmlns","cx","cy","r","fill","FridgeItem","_ref","quantityArray","values","quantityString","JSON","stringify","unitString","combined","description","ListItem_default","StatusIcon","ListItemText_default","FridgeInfo","open","handleClickOpen","handleClose","_this$props","onClick","components_FridgeItem","Dialog_default","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","compare","b","overflowY","borderRadius","inventory","sort","List_default","disablePadding","map","item","FridgeInfo_FridgeInfo","StyledFridge","styled","div","_templateObject","NavDrawer","left","toggleDrawer","side","sideList","list","Link","style","textDecoration","to","key","ListItemIcon_default","Kitchen_default","Bookmarks_default","Input_default","Search_default","icons_Menu_default","Drawer_default","tabIndex","role","onKeyDown","fullList","NavBar","auth","anchorEl","checked","handleMenu","currentTarget","Boolean","AppBar_default","position","Toolbar_default","toolbar","components_NavDrawer","grow","IconButton_default","aria-owns","undefined","aria-haspopup","AccountCircle_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem_default","flexGrow","marginLeft","menuButton","marginRight","backgroundColor","components_NavBar","components_FridgeEntry","components_FridgeList","StyledBrowse","style_templateObject","BrowseRecipeCard","expanded","handleExpandClick","recipeId","instructions","queryString","headers","X-RapidAPI-Key","then","res","data","length","substring","estimatedTime","readyInMinutes","handleAddToList","recipe","accountId","_this2","image","usedIngredientCount","missedIngredientCount","media","expandOpen","expand","titlePadding","noTitlePadding","instructionStyle","padTitle","Fragment","CardHeader_default","CardMedia_default","CardActions_default","classnames","aria-expanded","aria-label","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","subheader","paragraph","cardHeader","paddingTop","actions","transform","transition","transitions","create","duration","shortest","avatar","paddingBottom","Browse","recipes","getIngredientsList","ingredients","ingredientList","ingredient","join","renderFavoriteRecipes","_this$props$location","location","selected","Browse_style","components_BrowseRecipeCard","StyledWelcome","Welcome_style_templateObject","StyledButton","Button","text","StyledLogo","Logo_style_templateObject","Logo","alt","Logo_style","src","LogoImg","StyledHeader","WelcomeText_style_templateObject","WelcomeText","WelcomeText_style","Welcome","Welcome_style","components_Logo","components_WelcomeText","components_Button","StyledHome","Login_style_templateObject","GoogleSignIn","googleUser","profile","getBasicProfile","getId","getName","getGivenName","getFamilyName","getImageUrl","getEmail","idToken","getAuthResponse","data-onsuccess","data-theme","FacebookLogin","data-size","data-button-type","data-auto-logout-link","data-use-continue-as","Login","Login_style","flexDirection","alignItems","components_FacebookLogin","components_GoogleSignIn","Home_style_templateObject","Home","Home_style","RecipeInput","ingredientDivs","postAPI","source","fetch","method","body","json","catch","err","handleCreate","ingredientName","multiline","push","newRecipe","response","msg","_this$state2","onGenNewInput","_this$state3","_this$state4","gutterBottom","fullTextField","currElement","rows","StyledRecipeEntry","EnterRecipe_style_templateObject","EnterRecipe","EnterRecipe_style","components_RecipeInput","StyledRecipe","RecipeInformation_style_templateObject","RecipeIngredient","StyledInstructions","RecipeInstruction_style_templateObject","RecipeInstructions","RecipeInstruction_style","line","fontWeight","details","table","info","chip","readyIn","originalUrl","creditText","dietaryRestrictions","vegetarian","vegan","glutenFree","dairyFree","veryHealthy","cheap","popular","sustainable","lowFodmap","ketogenic","whole30","RecipeInformation_style","Chip_default","href","components_RecipeIngredient","originalString","RecipeInstruction","StyledRecipePage","RecipePage_style_templateObject","Recipe","veryPopular","weightWatcherSmartPoints","gaps","servings","sourceUrl","spoonacularSourceUrl","aggregateLikes","sourceName","extendedIngredients","aisle","amount","unitShort","unitLong","metaInformation","imageType","RecipePage","Recipes","getRecipeInfo","match","params","_this$state$Recipes","dietaryRestriction","RecipePage_style","RecipeInformation","StyledIngredientSearch","SearchByIngredient_style_templateObject","newChecked","newTo","pathname","SelectFridge","handleToggle","currentIndex","indexOf","splice","handleDelete","onDelete","ListItemSecondaryAction_default","Checkbox_default","alignContent","maxHeight","border","SearchByIngredient","SearchByIngredient_style","components_SelectFridge","App","Switch","Route","exact","path","component","Fridge","window","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f5d5994.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/citrus-logo.6fd78a18.svg\";","import axios from 'axios';\r\n\r\nexport default {\r\n  // Gets all recipes\r\n  getRecipes() {\r\n    return axios.get('/api/recipes');\r\n  },\r\n  // Gets the recipe with the given id\r\n  getRecipe(id) {\r\n    return axios.get(`/api/recipes/${id}`);\r\n  },\r\n  // Deletes the recipe with the given id\r\n  deleteRecipe(id) {\r\n    return axios.delete(`/api/recipes/${id}`);\r\n  },\r\n  // Saves a recipe to the database\r\n  saveRecipe(recipeData) {\r\n    return axios.post('/api/recipes', recipeData);\r\n  },\r\n  // Saves a recipe to the database\r\n  saveAPIRecipe(recipeData) {\r\n    return axios.post('/api/apirecipes', recipeData);\r\n  },\r\n  // Gets all recipes\r\n  getFridge() {\r\n    return axios.get('/api/fridgelist');\r\n  },\r\n  saveFridge() {\r\n    return axios.post('/api/fridgelist');\r\n  },\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  withStyles,\r\n  MuiThemeProvider,\r\n  createMuiTheme,\r\n} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport API from '../../utils/API';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: '#ff9966' }, // peach\r\n    secondary: { main: '#0097A7' }, // teal\r\n  },\r\n});\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    background: '#FFF',\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    margin: 24,\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  textField: {\r\n    margin: 8,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  card: {\r\n    margin: 8,\r\n    padding: 8,\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    display: 'flex',\r\n  },\r\n});\r\n// #ff9966\r\nclass FridgeEntry extends React.Component {\r\n  state = {\r\n    name: '',\r\n    quantity: '',\r\n    unit: '',\r\n    date: '',\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { intervalIsSet } = this.state;\r\n    this.getFridge();\r\n    if (!intervalIsSet) {\r\n      const interval = setInterval(this.getDataFromDb, 1000);\r\n      this.setState({ intervalIsSet: interval });\r\n    }\r\n  }\r\n\r\n  getFridge = () => {\r\n    console.log('getFridge');\r\n    API.saveFridge({\r\n      name: 'Avocado',\r\n      quantity: '1',\r\n      unit: 'avocados',\r\n    });\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, quantity, unit, date } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <Card className={classes.container}>\r\n          <CardContent>\r\n            <Typography className={classes.title} color=\"textSecondary\">\r\n              Add Ingredients to Your Fridge\r\n            </Typography>\r\n          </CardContent>\r\n          <form className={classes.card} noValidate autoComplete=\"off\">\r\n            <TextField\r\n              id=\"outlined-name\"\r\n              label=\"Ingredient Name\"\r\n              className={classes.textField}\r\n              value={name}\r\n              onChange={this.handleChange('name')}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              id=\"outlined-quantity\"\r\n              label=\"Quantity\"\r\n              className={classes.textField}\r\n              value={quantity}\r\n              onChange={this.handleChange('quantity')}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              id=\"outlined-unit\"\r\n              label=\"Unit\"\r\n              className={classes.textField}\r\n              value={unit}\r\n              onChange={this.handleChange('unit')}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              id=\"outlined-date\"\r\n              label=\"Date (DD/MM/YYYY)\"\r\n              className={classes.textField}\r\n              value={date}\r\n              onChange={this.handleChange('date')}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n            />\r\n            <Button\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              color=\"secondary\"\r\n            >\r\n              Add to fridge\r\n            </Button>\r\n          </form>\r\n        </Card>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nFridgeEntry.propTypes = {\r\n  classes: PropTypes.object,\r\n};\r\n\r\nexport default withStyles(styles)(FridgeEntry);\r\n","const Inventory = {\r\n  fridge: [\r\n    {\r\n      status: 'yellow',\r\n      name: 'Apples',\r\n      quantity: 2,\r\n      unit: null,\r\n      purchaseDate: 'February 2, 2019',\r\n    },\r\n    {\r\n      status: 'green',\r\n      name: 'Yams',\r\n      quantity: 425,\r\n      unit: null,\r\n      purchaseDate: 'February 9, 2019',\r\n    },\r\n    {\r\n      status: 'green',\r\n      name: 'Butter',\r\n      quantity: 4,\r\n      unit: 'Pounds',\r\n      purchaseDate: 'February 2, 2019',\r\n    },\r\n    {\r\n      status: 'green',\r\n      name: 'Bread',\r\n      quantity: 1,\r\n      unit: 'Loaves',\r\n      purchaseDate: 'February 2, 2019',\r\n    },\r\n    {\r\n      status: 'yellow',\r\n      name: 'Chicken Breasts',\r\n      quantity: 6,\r\n      unit: null,\r\n      purchaseDate: 'February 2, 2019',\r\n    },\r\n    {\r\n      status: 'red',\r\n      name: 'Spaghetti',\r\n      quantity: 0.25,\r\n      unit: 'Pounds',\r\n      purchaseDate: 'February 2, 2019',\r\n    },\r\n    {\r\n      status: 'green',\r\n      name: 'Eggs',\r\n      quantity: 6,\r\n      unit: null,\r\n      purchaseDate: 'February 2, 2019',\r\n    },\r\n    {\r\n      status: 'red',\r\n      name: 'Frog Legs',\r\n      quantity: 4,\r\n      unit: null,\r\n      purchaseDate: 'February 2, 2019',\r\n    },\r\n    {\r\n      status: 'green',\r\n      name: 'Ranch Dressing',\r\n      quantity: 12,\r\n      unit: 'Fluid Ounces',\r\n      purchaseDate: 'February 2, 2019',\r\n    },\r\n    {\r\n      status: 'yellow',\r\n      name: 'Milk',\r\n      quantity: 80,\r\n      unit: 'Gallons',\r\n      purchaseDate: 'February 2, 2019',\r\n    },\r\n    {\r\n      status: 'green',\r\n      name: 'Hummus',\r\n      quantity: 12,\r\n      unit: 'Ounces',\r\n      purchaseDate: 'February 2, 2019',\r\n    },\r\n    {\r\n      status: 'red',\r\n      name: 'Carrots',\r\n      quantity: 100000,\r\n      unit: null,\r\n      purchaseDate: 'February 2, 2019',\r\n    },\r\n    {\r\n      status: 'green',\r\n      name: 'Pineapple',\r\n      quantity: 6,\r\n      unit: null,\r\n      purchaseDate: 'February 9, 2019',\r\n    },\r\n    {\r\n      status: 'yellow',\r\n      name: 'Green Beans',\r\n      quantity: 6,\r\n      unit: null,\r\n      purchaseDate: 'February 11, 2019',\r\n    },\r\n    {\r\n      status: 'red',\r\n      name: 'Coffee',\r\n      quantity: 6,\r\n      unit: 'Pods',\r\n      purchaseDate: 'February 11, 2019',\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Inventory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst status = {\r\n  green: '#9BC995',\r\n  yellow: '#FED766',\r\n  red: '#FE4A49',\r\n};\r\n\r\nconst Icon = props => (\r\n  <svg width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <circle cx=\"10\" cy=\"10\" r=\"10\" fill={status[props.status]} />\r\n  </svg>\r\n);\r\n\r\nIcon.propTypes = {\r\n  status: PropTypes.string,\r\n};\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Icon from '../StatusIcon';\r\n\r\nfunction FridgeItem({ status, title, quantity, unit }) {\r\n  const quantityArray = Object.values({ quantity });\r\n  const quantityString = JSON.stringify(quantityArray[0]);\r\n  const unitArray = Object.values({ unit });\r\n  const unitString = unitArray[0];\r\n  const combined = `${quantityString} ${unitString}`;\r\n  const description = unitString ? combined : quantityString;\r\n  return (\r\n    <ListItem>\r\n      <Icon status={status} />\r\n      <ListItemText primary={title} secondary={description} />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nFridgeItem.propTypes = {\r\n  title: PropTypes.string,\r\n  unit: PropTypes.string,\r\n  quantity: PropTypes.number,\r\n  status: PropTypes.string,\r\n};\r\n\r\nexport default FridgeItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport FridgeItem from '../FridgeItem';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: '#ff9966' }, // peach\r\n    secondary: { main: '#0097A7' }, // teal\r\n  },\r\n});\r\n\r\nexport default class FridgeInfo extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { status, title, quantity, unit, purchaseDate } = this.props;\r\n    const { open } = this.state;\r\n    return (\r\n      <div>\r\n        <ListItem onClick={this.handleClickOpen}>\r\n          <FridgeItem\r\n            status={status}\r\n            title={title}\r\n            quantity={quantity}\r\n            unit={unit}\r\n          />\r\n        </ListItem>\r\n        <MuiThemeProvider theme={theme}>\r\n          <Dialog\r\n            open={open}\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                {quantity} {unit} Remaining\r\n                <br />\r\n                Purchase Date: {purchaseDate}\r\n                <br />\r\n                Expiration Date:\r\n              </DialogContentText>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Update\r\n              </Button>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Remove\r\n              </Button>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFridgeInfo.propTypes = {\r\n  title: PropTypes.string,\r\n  unit: PropTypes.string,\r\n  quantity: PropTypes.number,\r\n  status: PropTypes.string,\r\n  purchaseDate: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Inventory from './inventory';\r\nimport FridgeInfo from '../FridgeInfo';\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    background: '#FFF',\r\n    overflowY: 'scroll',\r\n    margin: '8px',\r\n    borderRadius: '4px',\r\n    justifyContent: 'center',\r\n    width: '75vw',\r\n  },\r\n});\r\n\r\n// Alphabetize inventory by name\r\nfunction compare(a, b) {\r\n  if (a.name < b.name) return -1;\r\n  if (a.name > b.name) return 1;\r\n  return 0;\r\n}\r\n\r\nfunction FridgeList(props) {\r\n  const inventory = Inventory.fridge;\r\n  const { classes } = props;\r\n  inventory.sort(compare);\r\n  return (\r\n    <List disablePadding className={classes.root}>\r\n      {inventory.map(item => (\r\n        <FridgeInfo\r\n          status={item.status}\r\n          title={item.name}\r\n          quantity={item.quantity}\r\n          unit={item.unit}\r\n          purchaseDate={item.purchaseDate}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nFridgeList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FridgeList);\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFridge = styled.div`\r\n  background-image: linear-gradient(#0097a7, #4fbf9e, #ccff90);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  width: 100vw;\r\n`;\r\n\r\nexport default StyledFridge;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  MuiThemeProvider,\r\n  createMuiTheme,\r\n  withStyles,\r\n} from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Kitchen from '@material-ui/icons/Kitchen';\r\nimport Bookmarks from '@material-ui/icons/Bookmarks';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Input from '@material-ui/icons/Input';\r\nimport Search from '@material-ui/icons/Search';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: '#ff9966' }, // peach\r\n    secondary: { main: '#0097A7' }, // teal\r\n  },\r\n});\r\n\r\nconst styles = {\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n};\r\n\r\nclass NavDrawer extends React.Component {\r\n  state = {\r\n    left: false,\r\n  };\r\n\r\n  toggleDrawer = (side, open) => () => {\r\n    this.setState({\r\n      [side]: open,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const sideList = (\r\n      <div className={classes.list}>\r\n        <List>\r\n          <MuiThemeProvider theme={theme}>\r\n            <Link style={{ textDecoration: 'none' }} to=\"fridge\">\r\n              <ListItem button key=\"My Fridge\">\r\n                <ListItemIcon>\r\n                  <Kitchen />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"My Fridge\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link style={{ textDecoration: 'none' }} to=\"recipe/479101\">\r\n              <ListItem button key=\"My Recipes\">\r\n                <ListItemIcon>\r\n                  <Bookmarks />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"My Recipes\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link style={{ textDecoration: 'none' }} to=\"enterrecipe\">\r\n              <ListItem button key=\"Add Recipes\">\r\n                <ListItemIcon>\r\n                  <Input />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Add Recipe\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link style={{ textDecoration: 'none' }} to=\"searchbyingredient\">\r\n              <ListItem button key=\"Search Recipes by Ingredients\">\r\n                <ListItemIcon>\r\n                  <Search />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Search Recipes by Ingredients\" />\r\n              </ListItem>\r\n            </Link>\r\n          </MuiThemeProvider>\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <MenuIcon onClick={this.toggleDrawer('left', true)} />\r\n        <Drawer\r\n          open={this.state.left} // eslint-disable-line react/destructuring-assignment\r\n          onClose={this.toggleDrawer('left', false)}\r\n        >\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={this.toggleDrawer('left', false)}\r\n            onKeyDown={this.toggleDrawer('left', false)}\r\n          >\r\n            {sideList}\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNavDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(NavDrawer);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport NavDrawer from '../NavDrawer';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100vw',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    marginLeft: '8px',\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  toolbar: {\r\n    backgroundColor: '#fd9e61',\r\n  },\r\n};\r\n\r\nclass NavBar extends React.Component {\r\n  state = {\r\n    auth: true,\r\n    anchorEl: null,\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ auth: event.target.checked });\r\n  };\r\n\r\n  handleMenu = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    const { classes, title } = this.props;\r\n    const { auth, anchorEl } = this.state;\r\n    const open = Boolean(anchorEl);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        {/* <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={auth}\r\n                onChange={this.handleChange}\r\n                aria-label=\"LoginSwitch\"\r\n              />\r\n            }\r\n            label={auth ? 'Logout' : 'Login'}\r\n          />\r\n        </FormGroup> */}\r\n        <AppBar position=\"static\">\r\n          <Toolbar className={classes.toolbar}>\r\n            <NavDrawer />\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              {title}\r\n            </Typography>\r\n            {auth && (\r\n              <div>\r\n                <IconButton\r\n                  aria-owns={open ? 'menu-appbar' : undefined}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={this.handleMenu}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorEl}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  open={open}\r\n                  onClose={this.handleClose}\r\n                >\r\n                  <Link style={{ textDecoration: 'none' }} to=\"#\">\r\n                    <MenuItem>My Account</MenuItem>\r\n                  </Link>\r\n                  <Link style={{ textDecoration: 'none' }} to=\"fridge\">\r\n                    <MenuItem>My Fridge</MenuItem>\r\n                  </Link>\r\n                  <Link style={{ textDecoration: 'none' }} to=\"myrecipes\">\r\n                    <MenuItem>My Recipes</MenuItem>\r\n                  </Link>\r\n                </Menu>\r\n              </div>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNavBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(NavBar);\r\n","import React from 'react';\r\n// import PropTypes from \"prop-types\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FridgeEntry from '../FridgeEntry';\r\nimport FridgeList from '../FridgeList';\r\nimport StyledFridge from './style.js';\r\nimport NavBar from '../NavBar';\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    background: '#FFF',\r\n  },\r\n});\r\n\r\nfunction Fridge() {\r\n  // const { classes } = props;\r\n  return (\r\n    <div>\r\n      <NavBar title=\"Citrus\" />\r\n      <StyledFridge>\r\n        <div>\r\n          <FridgeEntry />\r\n        </div>\r\n        <FridgeList />\r\n      </StyledFridge>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Fridge.propTypes = {\r\n//   classes: PropTypes.object.isRequired\r\n// };\r\n\r\nexport default withStyles(styles)(Fridge);\r\n","import styled from 'styled-components';\r\n\r\nconst StyledBrowse = styled.div`\r\n  background-image: linear-gradient(#0097a7, #4fbf9e, #ccff90);\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default StyledBrowse;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classnames from 'classnames';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport API from '../../utils/API';\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    width: 400,\r\n    margin: 8,\r\n  },\r\n  cardHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: 'white',\r\n  },\r\n  titlePadding: {\r\n    paddingBottom: 32,\r\n  },\r\n  noTitlePadding: {\r\n    paddingBottom: 8,\r\n  },\r\n  instructionStyle: {\r\n    padding: 16,\r\n  },\r\n});\r\n\r\nclass BrowseRecipeCard extends React.Component {\r\n  state = { expanded: false };\r\n\r\n  handleExpandClick = id => {\r\n    const recipeId = id;\r\n    if (!this.state.instructions) { // eslint-disable-line\r\n      // did we already get info for this card\r\n      // okay let's pull recipe info\r\n      const queryString = `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${recipeId}/information`;\r\n      axios\r\n        .get(queryString, {\r\n          headers: {\r\n            'X-RapidAPI-Key':\r\n              'MYPL92HY3cmshOzLkll6ixnLVAVlp1nZQhxjsnf245LFIJlc9D',\r\n          },\r\n        })\r\n        .then(res => {\r\n          const instructions =\r\n            res.data.instructions.length > 500\r\n              ? res.data.instructions.substring(0, 500)\r\n              : res.data.instructions;\r\n          this.setState(() => ({\r\n            instructions,\r\n            estimatedTime: res.data.readyInMinutes,\r\n          }));\r\n        });\r\n    }\r\n    this.setState(state => ({\r\n      expanded: !state.expanded,\r\n    }));\r\n  };\r\n\r\n  handleAddToList = recipe => {\r\n    console.log('adding recipe to list ', recipe);\r\n    API.saveAPIRecipe({\r\n      recipe,\r\n      // TODO change accountId to real value once possible\r\n      accountId: 't0d0r3m0v3l8rt3st64',\r\n    });\r\n    /* Use findAll to display all recipes that are saved */\r\n  };\r\n\r\n  render() {\r\n    const { recipe, classes } = this.props;\r\n    const {\r\n      title,\r\n      image,\r\n      id,\r\n      usedIngredientCount,\r\n      missedIngredientCount,\r\n    } = recipe;\r\n    const {\r\n      media,\r\n      card,\r\n      expandOpen,\r\n      expand,\r\n      titlePadding,\r\n      noTitlePadding,\r\n      instructionStyle,\r\n    } = classes;\r\n    const { expanded, instructions, estimatedTime } = this.state;\r\n\r\n    const padTitle = title.length < 20 ? titlePadding : noTitlePadding;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card className={card}>\r\n          <CardHeader title={title} className={padTitle} />\r\n          <CardMedia className={media} image={image} title={title} />\r\n          <CardActions>\r\n            <Link to={`/recipe/${id}`} style={{ textDecoration: 'none' }}>\r\n              <Button size=\"small\">MAKE NOW</Button>\r\n            </Link>\r\n            <Button\r\n              size=\"small\"\r\n              onClick={() => {\r\n                this.handleAddToList(recipe);\r\n              }}\r\n            >\r\n              ADD TO LIST\r\n            </Button>\r\n            <IconButton\r\n              className={classnames(expand, {\r\n                [expandOpen]: expanded,\r\n              })}\r\n              onClick={() => this.handleExpandClick(id)}\r\n              aria-expanded={expanded}\r\n              aria-label=\"Show more\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </IconButton>\r\n          </CardActions>\r\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n              <CardHeader\r\n                title=\"Additional Information\"\r\n                subheader={`You have ${usedIngredientCount} out of ${usedIngredientCount +\r\n                  missedIngredientCount} ingredients to make this recipe\r\n                  Estimated Time: ${estimatedTime || '?'} minutes`}\r\n              />\r\n              <Typography className={instructionStyle} paragraph>\r\n                {instructions}\r\n              </Typography>\r\n            </CardContent>\r\n          </Collapse>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBrowseRecipeCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  recipe: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(BrowseRecipeCard);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport StyledBrowse from './style.js';\r\nimport NavBar from '../NavBar';\r\nimport BrowseRecipeCard from '../BrowseRecipeCard';\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    maxWidth: 400,\r\n    margin: 8,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: 'white',\r\n  },\r\n});\r\n\r\nclass Browse extends React.Component {\r\n  state = { recipes: [] };\r\n\r\n  componentDidMount() {\r\n    const { location = {} } = this.props;\r\n\r\n    // If route includes ingredients call API to do ingredient search, otherwise render favorite recipes\r\n    return location.selected\r\n      ? this.getIngredientsList(Object.values(location.selected)[0])\r\n      : this.renderFavoriteRecipes();\r\n  }\r\n\r\n  getIngredientsList = ingredients => {\r\n    // build query string https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients?number=5&ranking=1&ingredients=apples%2Cflour%2Csugar\r\n\r\n    console.log(ingredients);\r\n    const ingredientList = ingredients\r\n      .map(ingredient => `${ingredient}%2C`)\r\n      .join('');\r\n    const queryString = `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients?number=10&ranking=1&ingredients=${ingredientList}`;\r\n    axios\r\n      .get(queryString, {\r\n        headers: {\r\n          'X-RapidAPI-Key':\r\n            'MYPL92HY3cmshOzLkll6ixnLVAVlp1nZQhxjsnf245LFIJlc9D',\r\n        },\r\n      })\r\n      .then(res => {\r\n        const recipeData = res.data;\r\n        this.setState({ recipes: recipeData });\r\n      });\r\n  };\r\n\r\n  // TODO: Due to API limitation need to store recipe info in DB for user. This will grab info and send array to render\r\n  renderFavoriteRecipes = recipes => {\r\n    // pass JSON stored in server to state to render\r\n    this.setState({ recipes });\r\n  };\r\n\r\n  render() {\r\n    const { recipes } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar title=\"Citrus\" />\r\n        <StyledBrowse>\r\n          {recipes.map(recipe => (\r\n            <BrowseRecipeCard recipe={recipe} key={recipe.id} />\r\n          ))}\r\n        </StyledBrowse>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBrowse.propTypes = {\r\n  location: PropTypes.object,\r\n};\r\n\r\nexport default withStyles(styles)(Browse);\r\n","import styled from 'styled-components';\r\n\r\nconst StyledWelcome = styled.div`\r\n  background-image: linear-gradient(#0097a7, #4fbf9e, #ccff90);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 667px;\r\n  min-width: 375px;\r\n  @media screen and (orientation: portrait) {\r\n    height: 100vh;\r\n    width: 100vw;\r\n  }\r\n  @media screen and (orientation: landscape) {\r\n    height: 100vh;\r\n    width: 100vw;\r\n  }\r\n`;\r\n\r\nexport default StyledWelcome;\r\n","import React from 'react';\r\nimport Buttons from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StyledButton = {\r\n  backgroundColor: '#fd9e61',\r\n  margin: '8px',\r\n  width: '175px',\r\n};\r\n\r\nconst Button = ({ text }) => (\r\n  <Buttons\r\n    variant=\"contained\"\r\n    color=\"primary\"\r\n    size=\"large\"\r\n    style={StyledButton}\r\n  >\r\n    {text}\r\n  </Buttons>\r\n);\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledLogo = styled.div`\r\n  width: 204px;\r\n  padding: 8px;\r\n`;\r\n\r\nexport default StyledLogo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StyledLogo from './style.js';\r\nimport LogoImg from './citrus-logo.svg';\r\n\r\nconst Logo = ({ alt }) => (\r\n  <StyledLogo>\r\n    <img src={LogoImg} alt={alt} />\r\n  </StyledLogo>\r\n);\r\n\r\nLogo.propTypes = {\r\n  alt: PropTypes.string,\r\n};\r\n\r\nexport default Logo;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledHeader = styled.div`\r\n  font-size: 24px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  line-height: 29px;\r\n  color: #ffffff;\r\n  margin: 25px 8px 25px 8px;\r\n`;\r\n\r\nexport default StyledHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StyledHeader from './style.js';\r\n\r\nconst WelcomeText = ({ text }) => (\r\n  <StyledHeader>{`Welcome, ${text}`}</StyledHeader>\r\n);\r\n\r\nWelcomeText.propTypes = {\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default WelcomeText;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport StyledWelcome from './style';\r\nimport Button from '../Button';\r\nimport Logo from '../Logo';\r\nimport WelcomeText from '../WelcomeText';\r\n\r\nconst Welcome = () => (\r\n  <StyledWelcome>\r\n    <Logo />\r\n    {/* TODO: This needs to take first name of user from user db! */}\r\n    <WelcomeText text=\"Paul\" />\r\n    <Link style={{ textDecoration: 'none' }} to=\"fridge\">\r\n      <Button text=\"My Fridge\" />\r\n    </Link>\r\n    <Link style={{ textDecoration: 'none' }} to=\"browse\">\r\n      <Button text=\"My Recipes\" />\r\n    </Link>\r\n  </StyledWelcome>\r\n);\r\n\r\nexport default Welcome;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledHome = styled.div`\r\n  background-image: linear-gradient(#0097a7, #4fbf9e, #ccff90);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 667px;\r\n  min-width: 375px;\r\n`;\r\n\r\nexport default StyledHome;\r\n","import React, { Component } from 'react';\r\n\r\nclass GoogleSignIn extends Component {\r\n  onSignIn(googleUser) {\r\n    // Useful data for your client-side scripts:\r\n    const profile = googleUser.getBasicProfile();\r\n    console.log(`ID: ${profile.getId()}`); // Don't send this directly to your server!\r\n    console.log(`Full Name: ${profile.getName()}`);\r\n    console.log(`Given Name: ${profile.getGivenName()}`);\r\n    console.log(`Family Name: ${profile.getFamilyName()}`);\r\n    console.log(`Image URL: ${profile.getImageUrl()}`);\r\n    console.log(`Email: ${profile.getEmail()}`);\r\n\r\n    // The ID token you need to pass to your backend:\r\n    const { idToken } = this.googleUser.getAuthResponse();\r\n    console.log(`ID Token: ${idToken}`);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"g-signin2\" data-onsuccess=\"onSignIn\" data-theme=\"dark\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleSignIn;\r\n","import React, { Component } from 'react';\r\n\r\nclass FacebookLogin extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"fb-login-button\"\r\n        data-size=\"medium\"\r\n        data-button-type=\"login_with\"\r\n        data-auto-logout-link=\"false\"\r\n        data-use-continue-as=\"false\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FacebookLogin;\r\n","import React from 'react';\r\nimport StyledHome from './style.js';\r\nimport Logo from '../Logo';\r\nimport GoogleSignIn from '../GoogleSignIn';\r\nimport FacebookLogin from '../FacebookLogin';\r\nimport NavBar from '../NavBar';\r\n\r\nconst Login = () => (\r\n  <div>\r\n    <NavBar title=\"Citrus\" />\r\n    <StyledHome>\r\n      <Logo />\r\n      <div\r\n        style={{\r\n          margin: '8px',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <div style={{ margin: '8px 8px 8px 8px' }}>\r\n          <FacebookLogin />\r\n        </div>\r\n        <div style={{ margin: '8px' }}>\r\n          <GoogleSignIn />\r\n        </div>\r\n      </div>\r\n    </StyledHome>\r\n  </div>\r\n);\r\n\r\nexport default Login;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledHome = styled.div`\r\n  background-image: linear-gradient(#0097a7, #4fbf9e, #ccff90);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 667px;\r\n  min-width: 375px;\r\n`;\r\n\r\nexport default StyledHome;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../Logo';\r\nimport StyledHome from './style';\r\nimport Button from '../Button';\r\n\r\nconst Home = () => (\r\n  <StyledHome>\r\n    <Logo />\r\n    {/* TODO: This needs to take first name of user from user db! */}\r\n    <Link style={{ textDecoration: 'none' }} to=\"login\">\r\n      <Button text=\"Log In\" />\r\n    </Link>\r\n  </StyledHome>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  withStyles,\r\n  MuiThemeProvider,\r\n  createMuiTheme,\r\n} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport API from '../../utils/API';\r\n// import StyledRecipeInput from './style.js';\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: '#ff9966' }, // peach\r\n    secondary: { main: '#0097A7' }, // teal\r\n  },\r\n});\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: 360,\r\n    background: '#FFF',\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    margin: 8,\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fullTextField: {\r\n    margin: 8,\r\n    width: '100%',\r\n  },\r\n  textField: {\r\n    margin: 8,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  card: {\r\n    width: '90%',\r\n    margin: 8,\r\n    backgroundColor: 'white',\r\n    padding: 8,\r\n    borderRadius: 4,\r\n  },\r\n  button: {\r\n    justifyContent: 'center',\r\n    display: 'flex',\r\n  },\r\n});\r\n\r\n// #ff9966\r\nclass RecipeInput extends React.Component {\r\n  state = {\r\n    ingredientDivs: [],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  // CRUD\r\n  postAPI = (source, data) =>\r\n    fetch(`/.netlify/functions/${source}`, {\r\n      method: 'post',\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then(res => res.json())\r\n      .catch(err => err);\r\n\r\n  // CRUD Handlers\r\n  handleCreate = () => {\r\n    const {\r\n      ingredientDivs,\r\n      ingredientName,\r\n      quantity,\r\n      unit,\r\n      multiline,\r\n      title,\r\n    } = this.state;\r\n\r\n    if (ingredientName && quantity && unit !== ``) {\r\n      ingredientDivs.push({\r\n        ingredientName,\r\n        quantity,\r\n        unit,\r\n      });\r\n    }\r\n\r\n    let newRecipe = {\r\n      title,\r\n      ingredients: ingredientDivs,\r\n      instructions: multiline,\r\n      // TODO change accountId to real value once possible\r\n      accountId: 't0d0r3m0v3l8rt3st64',\r\n    };\r\n\r\n    this.postAPI('recipe-create', newRecipe)\r\n      .then(response => {\r\n        console.log(response.msg);\r\n\r\n        const recipe = response.data;\r\n\r\n        // const { recipes } = [...this.state];\r\n\r\n        // const { inputs } = [...this.state];\r\n\r\n        newRecipe = {\r\n          title: '',\r\n          ingredients: [],\r\n          instructions: '',\r\n          // TODO change accountId to real value once possible\r\n          accountId: 't0d0r3m0v3l8rt3st64',\r\n        };\r\n\r\n        // const recipeProps = this.setRecipeProps(recipe);\r\n\r\n        // inputs.push(recipeProps);\r\n        // recipes.push(recipe);\r\n\r\n        //   this.setState({\r\n        //     recipes,\r\n        //     inputs,\r\n        //     newRecipe,\r\n        //   });\r\n      })\r\n      .catch(err => console.log('recipe.create API error: ', err));\r\n  };\r\n\r\n  // Database Queries go here\r\n  saveRecipe = () => {\r\n    console.log();\r\n    const {\r\n      ingredientDivs,\r\n      ingredientName,\r\n      quantity,\r\n      unit,\r\n      multiline,\r\n      title,\r\n    } = this.state;\r\n    if (ingredientName && quantity && unit !== ``) {\r\n      ingredientDivs.push({\r\n        ingredientName,\r\n        quantity,\r\n        unit,\r\n      });\r\n    }\r\n    API.saveRecipe({\r\n      title,\r\n      ingredients: ingredientDivs,\r\n      instructions: multiline,\r\n      // TODO change accountId to real value once possible\r\n      accountId: 't0d0r3m0v3l8rt3st64',\r\n    });\r\n  };\r\n\r\n  onGenNewInput = () => {\r\n    const { ingredientDivs, ingredientName, quantity, unit } = this.state;\r\n    /* TODO push existing states to array, and then map through the array to create a text list of ingredients above the \r\n   boxes, then empty the boxes */\r\n    ingredientDivs.push({\r\n      ingredientName,\r\n      quantity,\r\n      unit,\r\n    });\r\n    this.setState({\r\n      ingredientDivs,\r\n      ingredientName: ``,\r\n      quantity: ``,\r\n      unit: ``,\r\n    });\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      ingredientDivs,\r\n      title,\r\n      ingredientName,\r\n      quantity,\r\n      unit,\r\n      multiline,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className={classes.card}>\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.title}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            Add a Recipe\r\n          </Typography>\r\n        </CardContent>\r\n        <MuiThemeProvider theme={theme}>\r\n          <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <TextField\r\n              id=\"outlined-name\"\r\n              label=\"Recipe Title\"\r\n              className={classes.fullTextField}\r\n              value={title}\r\n              onChange={this.handleChange('title')}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n            />\r\n            <div>\r\n              {ingredientDivs.map(currElement => (\r\n                <div>\r\n                  <p>\r\n                    {currElement.ingredientName} {` `} {currElement.quantity}\r\n                    {` `} {currElement.unit}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <TextField\r\n              label=\"Ingredient Name\"\r\n              className={classes.textField}\r\n              value={ingredientName}\r\n              onChange={this.handleChange('ingredientName')}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              // id={`ingredientName${index}`}\r\n            />\r\n            <TextField\r\n              label=\"Quantity\"\r\n              className={classes.textField}\r\n              value={quantity}\r\n              onChange={this.handleChange('quantity')}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              // id={`ingredientQuantity${index}`}\r\n            />\r\n            <TextField\r\n              id=\"outlined-name\"\r\n              label=\"Unit\"\r\n              className={classes.textField}\r\n              value={unit}\r\n              onChange={this.handleChange('unit')}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n            />\r\n            <Button\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                this.onGenNewInput();\r\n              }}\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n            >\r\n              Add Ingredient\r\n            </Button>\r\n            <TextField\r\n              id=\"outlined-multiline-flexible\"\r\n              label=\"Instructions\"\r\n              multiline\r\n              rows=\"4\"\r\n              value={multiline}\r\n              onChange={this.handleChange('multiline')}\r\n              className={classes.fullTextField}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n            />\r\n            <Button\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              onClick={() => {\r\n                this.handleCreate();\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRecipeInput.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(RecipeInput);\r\n","import styled from 'styled-components';\r\n\r\nconst StyledRecipeEntry = styled.div`\r\n  background-image: linear-gradient(#0097a7, #4fbf9e, #ccff90);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  @media screen and (orientation: portrait) {\r\n    height: 100vh;\r\n    width: 100vw;\r\n  }\r\n  @media screen and (orientation: landscape) {\r\n    height: 100vh;\r\n    width: 100vw;\r\n  }\r\n`;\r\n\r\nexport default StyledRecipeEntry;\r\n","import React, { Component } from 'react';\r\nimport NavBar from '../NavBar';\r\nimport RecipeInput from '../RecipeInput';\r\nimport StyledRecipeEntry from './style';\r\n\r\nclass EnterRecipe extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar title=\"Citrus\" />\r\n        <StyledRecipeEntry>\r\n          <RecipeInput />\r\n        </StyledRecipeEntry>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EnterRecipe;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledRecipe = styled.div`\r\n  font-family: 'Roboto', sans-serif;\r\n  background-color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-width: 375px;\r\n  width: 80%;\r\n  margin: 10px;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport default StyledRecipe;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Icon from '../StatusIcon';\r\n\r\nfunction RecipeIngredient({ status, title, secondary }) {\r\n  return (\r\n    <ListItem>\r\n      <Icon status={status} />\r\n      <ListItemText primary={title} secondary={secondary} />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nRecipeIngredient.propTypes = {\r\n  status: PropTypes.string,\r\n  title: PropTypes.string,\r\n  secondary: PropTypes.string,\r\n};\r\n\r\nexport default RecipeIngredient;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledInstructions = styled.p`\r\n  font-size: 16px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  line-height: 29px;\r\n  margin: 8px 40px;\r\n`;\r\n\r\nexport default StyledInstructions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StyledInstructions from './style.js';\r\n\r\nconst RecipeInstructions = ({ text }) => (\r\n  <StyledInstructions>{text}</StyledInstructions>\r\n);\r\n\r\nRecipeInstructions.propTypes = {\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default RecipeInstructions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import Divider from '@material-ui/core/Divider';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport StyledRecipe from './style.js';\r\nimport RecipeIngredient from '../RecipeIngredient';\r\nimport RecipeInstruction from '../RecipeInstruction';\r\n\r\nconst styles = () => ({\r\n  image: {\r\n    width: '100%',\r\n    maxWidth: 500,\r\n    background: '#FFF',\r\n    borderRadius: '10px',\r\n  },\r\n  line: {\r\n    color: '#c0c0c0',\r\n    width: '75%',\r\n  },\r\n  title: {\r\n    fontSize: '24px',\r\n    fontWeight: 'bold',\r\n  },\r\n  details: {\r\n    color: '#666',\r\n    padding: '10px',\r\n    display: 'table',\r\n  },\r\n  table: {\r\n    display: 'table-row',\r\n  },\r\n  info: {\r\n    display: 'table-cell',\r\n    padding: '5px',\r\n  },\r\n  a: {\r\n    color: 'red',\r\n  },\r\n  chip: {\r\n    margin: '8px',\r\n    backgroundColor: '#0097A7',\r\n    color: 'white',\r\n  },\r\n});\r\n\r\nfunction RecipeView(props) {\r\n  const {\r\n    title,\r\n    classes,\r\n    image,\r\n    instructions,\r\n    ingredients,\r\n    readyIn,\r\n    originalUrl,\r\n    creditText,\r\n    dietaryRestrictions,\r\n  } = props;\r\n\r\n  const {\r\n    vegetarian,\r\n    vegan,\r\n    glutenFree,\r\n    dairyFree,\r\n    veryHealthy,\r\n    cheap,\r\n    popular,\r\n    sustainable,\r\n    lowFodmap,\r\n    ketogenic,\r\n    whole30,\r\n  } = dietaryRestrictions;\r\n\r\n  return ingredients ? (\r\n    <StyledRecipe>\r\n      <div className={classes.title}> {title} </div>\r\n      <div className={classes.details}>\r\n        <div className={classes.table}>\r\n          <div className={classes.info}>\r\n            {vegetarian && <Chip label=\"Vegetarian\" className={classes.chip} />}\r\n            {vegan && <Chip label=\"Vegan\" className={classes.chip} />}\r\n            {glutenFree && (\r\n              <Chip label=\"Gluten Free\" className={classes.chip} />\r\n            )}\r\n            {dairyFree && <Chip label=\"Dairy Free\" className={classes.chip} />}\r\n            {veryHealthy && (\r\n              <Chip label=\"Very Healthy\" className={classes.chip} />\r\n            )}\r\n            {cheap && <Chip label=\"Cheap\" className={classes.chip} />}\r\n            {popular && <Chip label=\"Popular\" className={classes.chip} />}\r\n            {sustainable && (\r\n              <Chip label=\"Sustainable\" className={classes.chip} />\r\n            )}\r\n            {lowFodmap && <Chip label=\"Low FODMAP\" className={classes.chip} />}\r\n            {ketogenic && <Chip label=\"Ketogenic\" className={classes.chip} />}\r\n            {whole30 && <Chip label=\"Whole 30\" className={classes.chip} />}\r\n          </div>\r\n          <div className={classes.info}>Ready in: {readyIn} Minutes </div>\r\n          <div className={classes.info}> | </div>\r\n          <div className={classes.info}>\r\n            Credit: <a href={originalUrl}>{creditText}</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <img className={classes.image} src={image} alt={title} />\r\n      </div>\r\n      <div>\r\n        {ingredients.map(ingredient => (\r\n          <RecipeIngredient status=\"red\" title={ingredient.originalString} />\r\n        ))}\r\n      </div>\r\n      <hr className={classes.line} />\r\n      <h3>Instructions</h3>\r\n      <RecipeInstruction text={instructions} />\r\n    </StyledRecipe>\r\n  ) : (\r\n    <div />\r\n  );\r\n}\r\n\r\nRecipeView.propTypes = {\r\n  classes: PropTypes.object,\r\n  title: PropTypes.string,\r\n  image: PropTypes.string,\r\n  instructions: PropTypes.string,\r\n  ingredients: PropTypes.array,\r\n  readyIn: PropTypes.string,\r\n  originalUrl: PropTypes.string,\r\n  creditText: PropTypes.string,\r\n  dietaryRestrictions: PropTypes.object,\r\n};\r\n\r\nexport default withStyles(styles)(RecipeView);\r\n","import styled from 'styled-components';\r\n\r\nconst StyledRecipePage = styled.div`\r\n  background-image: linear-gradient(#0097a7, #4fbf9e, #ccff90);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 200vh;\r\n`;\r\n\r\nexport default StyledRecipePage;\r\n","const Recipe = {\r\n  vegetarian: false,\r\n  vegan: false,\r\n  glutenFree: true,\r\n  dairyFree: true,\r\n  veryHealthy: false,\r\n  cheap: false,\r\n  veryPopular: false,\r\n  sustainable: false,\r\n  weightWatcherSmartPoints: 21,\r\n  gaps: 'no',\r\n  lowFodmap: false,\r\n  ketogenic: false,\r\n  whole30: false,\r\n  servings: 10,\r\n  sourceUrl:\r\n    'http://www.epicurious.com/recipes/food/views/Char-Grilled-Beef-Tenderloin-with-Three-Herb-Chimichurri-235342',\r\n  spoonacularSourceUrl:\r\n    'https://spoonacular.com/char-grilled-beef-tenderloin-with-three-herb-chimichurri-156992',\r\n  aggregateLikes: 0,\r\n  creditText: 'Epicurious',\r\n  sourceName: 'Epicurious',\r\n  extendedIngredients: [\r\n    {\r\n      id: 1022009,\r\n      aisle: 'Ethnic Foods',\r\n      image: 'https://spoonacular.com/cdn/ingredients_100x100/chili-powder.jpg',\r\n      name: 'ancho chile powder',\r\n      amount: 1.5,\r\n      unit: 'teaspoons',\r\n      unitShort: 't',\r\n      unitLong: 'teaspoons',\r\n      originalString:\r\n        '1 1/2 teaspoons chipotle chile powder or ancho chile powder',\r\n      metaInformation: [],\r\n    },\r\n    {\r\n      id: 13926,\r\n      aisle: 'Meat',\r\n      image:\r\n        'https://spoonacular.com/cdn/ingredients_100x100/beef-tenderloin.jpg',\r\n      name: 'beef tenderloin',\r\n      amount: 3.5,\r\n      unit: 'pound',\r\n      unitShort: 'lb',\r\n      unitLong: 'pounds',\r\n      originalString: '1 3 1/2-pound beef tenderloin',\r\n      metaInformation: [],\r\n    },\r\n    {\r\n      id: 1002030,\r\n      aisle: 'Spices and Seasonings',\r\n      image: 'https://spoonacular.com/cdn/ingredients_100x100/pepper.jpg',\r\n      name: 'black pepper',\r\n      amount: 0.5,\r\n      unit: 'teaspoon',\r\n      unitShort: 't',\r\n      unitLong: 'teaspoons',\r\n      originalString: '1/2 teaspoon freshly ground black pepper',\r\n      metaInformation: ['black', 'freshly ground'],\r\n    },\r\n    {\r\n      id: 1082047,\r\n      aisle: 'Spices and Seasonings',\r\n      image: 'https://spoonacular.com/cdn/ingredients_100x100/salt.jpg',\r\n      name: 'coarse kosher salt',\r\n      amount: 1,\r\n      unit: 'tablespoon',\r\n      unitShort: 'T',\r\n      unitLong: 'tablespoon',\r\n      originalString: '1 tablespoon coarse kosher salt',\r\n      metaInformation: [],\r\n    },\r\n    {\r\n      id: 10019334,\r\n      aisle: 'Baking',\r\n      image:\r\n        'https://spoonacular.com/cdn/ingredients_100x100/brown-sugar-dark.jpg',\r\n      name: 'dark brown sugar',\r\n      amount: 2,\r\n      unit: 'tablespoons',\r\n      unitShort: 'T',\r\n      unitLong: 'tablespoons',\r\n      originalString: '2 tablespoons dark brown sugar',\r\n      metaInformation: ['dark'],\r\n    },\r\n    {\r\n      id: 11165,\r\n      aisle: 'Produce',\r\n      image: 'https://spoonacular.com/cdn/ingredients_100x100/cilantro.png',\r\n      name: 'fresh cilantro',\r\n      amount: 2,\r\n      unit: 'cups',\r\n      unitShort: 'c',\r\n      unitLong: 'cups',\r\n      originalString: '2 cups (packed) stemmed fresh cilantro',\r\n      metaInformation: ['fresh', 'packed', 'stemmed'],\r\n    },\r\n    {\r\n      id: 2064,\r\n      aisle: 'Produce',\r\n      image: 'https://spoonacular.com/cdn/ingredients_100x100/mint.jpg',\r\n      name: 'fresh mint',\r\n      amount: 1,\r\n      unit: 'cup',\r\n      unitShort: 'c',\r\n      unitLong: 'cup',\r\n      originalString: '1 cup (packed) stemmed fresh mint',\r\n      metaInformation: ['fresh', 'packed', 'stemmed'],\r\n    },\r\n    {\r\n      id: 11297,\r\n      aisle: 'Produce',\r\n      image: 'https://spoonacular.com/cdn/ingredients_100x100/parsley.jpg',\r\n      name: 'fresh parsley',\r\n      amount: 3,\r\n      unit: 'cups',\r\n      unitShort: 'c',\r\n      unitLong: 'cups',\r\n      originalString: '3 cups (packed) stemmed fresh parsley',\r\n      metaInformation: ['fresh', 'packed', 'stemmed'],\r\n    },\r\n    {\r\n      id: 11215,\r\n      aisle: 'Produce',\r\n      image: 'https://spoonacular.com/cdn/ingredients_100x100/garlic.jpg',\r\n      name: 'garlic cloves',\r\n      amount: 3,\r\n      unit: '',\r\n      unitShort: '',\r\n      unitLong: '',\r\n      originalString: '3 garlic cloves, peeled',\r\n      metaInformation: ['peeled'],\r\n    },\r\n    {\r\n      id: 1002030,\r\n      aisle: 'Spices and Seasonings',\r\n      image: 'https://spoonacular.com/cdn/ingredients_100x100/pepper.jpg',\r\n      name: 'ground pepper',\r\n      amount: 1,\r\n      unit: 'teaspoon',\r\n      unitShort: 't',\r\n      unitLong: 'teaspoon',\r\n      originalString: '1 teaspoon ground black pepper',\r\n      metaInformation: ['black'],\r\n    },\r\n    {\r\n      id: 9152,\r\n      aisle: 'Produce',\r\n      image: 'https://spoonacular.com/cdn/ingredients_100x100/lemon-juice.jpg',\r\n      name: 'lemon juice',\r\n      amount: 3,\r\n      unit: 'tablespoons',\r\n      unitShort: 'T',\r\n      unitLong: 'tablespoons',\r\n      originalString: '3 tablespoons fresh lemon juice',\r\n      metaInformation: ['fresh'],\r\n    },\r\n    {\r\n      id: 4053,\r\n      aisle: 'Oil, Vinegar, Salad Dressing',\r\n      image: 'https://spoonacular.com/cdn/ingredients_100x100/olive-oil.jpg',\r\n      name: 'olive oil',\r\n      amount: 0.75,\r\n      unit: 'cup',\r\n      unitShort: 'c',\r\n      unitLong: 'cups',\r\n      originalString: '3/4 cup olive oil',\r\n      metaInformation: [],\r\n    },\r\n    {\r\n      id: 4053,\r\n      aisle: 'Oil, Vinegar, Salad Dressing',\r\n      image: 'https://spoonacular.com/cdn/ingredients_100x100/olive-oil.jpg',\r\n      name: 'olive oil',\r\n      amount: 2,\r\n      unit: 'tablespoons',\r\n      unitShort: 'T',\r\n      unitLong: 'tablespoons',\r\n      originalString: '2 tablespoons olive oil',\r\n      metaInformation: [],\r\n    },\r\n    {\r\n      id: 11821,\r\n      aisle: 'Produce',\r\n      image:\r\n        'https://spoonacular.com/cdn/ingredients_100x100/red-bell-pepper.png',\r\n      name: 'red pepper',\r\n      amount: 0.5,\r\n      unit: 'teaspoon',\r\n      unitShort: 't',\r\n      unitLong: 'teaspoons',\r\n      originalString: '1/2 teaspoon dried crushed red pepper',\r\n      metaInformation: ['dried', 'red', 'crushed'],\r\n    },\r\n    {\r\n      id: 1022068,\r\n      aisle: 'Oil, Vinegar, Salad Dressing',\r\n      image:\r\n        'https://spoonacular.com/cdn/ingredients_100x100/red-wine-vinegar.jpg',\r\n      name: 'red wine vinegar',\r\n      amount: 3,\r\n      unit: 'tablespoons',\r\n      unitShort: 'T',\r\n      unitLong: 'tablespoons',\r\n      originalString: '3 tablespoons Sherry wine vinegar or red wine vinegar',\r\n      metaInformation: ['red'],\r\n    },\r\n    {\r\n      id: 1012047,\r\n      aisle: 'Spices and Seasonings',\r\n      image: 'https://spoonacular.com/cdn/ingredients_100x100/salt.jpg',\r\n      name: 'sea salt',\r\n      amount: 1,\r\n      unit: 'teaspoon',\r\n      unitShort: 't',\r\n      unitLong: 'teaspoon',\r\n      originalString: '1 teaspoon fine sea salt',\r\n      metaInformation: ['fine'],\r\n    },\r\n    {\r\n      id: 11677,\r\n      aisle: 'Produce',\r\n      image: 'https://spoonacular.com/cdn/ingredients_100x100/shallots.jpg',\r\n      name: 'shallots',\r\n      amount: 2,\r\n      unit: '',\r\n      unitShort: '',\r\n      unitLong: '',\r\n      originalString: '2 medium shallots, peeled, quartered',\r\n      metaInformation: ['medium', 'peeled', 'quartered'],\r\n    },\r\n    {\r\n      id: 1002028,\r\n      aisle: 'Spices and Seasonings',\r\n      image: 'https://spoonacular.com/cdn/ingredients_100x100/paprika.jpg',\r\n      name: 'sweet paprika',\r\n      amount: 1,\r\n      unit: 'tablespoon',\r\n      unitShort: 'T',\r\n      unitLong: 'tablespoon',\r\n      originalString: '1 tablespoon sweet smoked paprika*',\r\n      metaInformation: ['smoked'],\r\n    },\r\n  ],\r\n  id: 156992,\r\n  title: 'Char-Grilled Beef Tenderloin with Three-Herb Chimichurri',\r\n  readyInMinutes: 45,\r\n  image:\r\n    'https://spoonacular.com/recipeImages/char-grilled-beef-tenderloin-with-three-herb-chimichurri-156992.jpg',\r\n  imageType: 'jpg',\r\n  instructions:\r\n    'Preparation for spice rub: Combine all ingredients in small bowl. Do ahead: Can be made 2 days ahead. Store airtight at room temperature. For chimichurri sauce: Combine first 8 ingredients in blender; blend until almost smooth. Add 1/4 of parsley, 1/4 of cilantro, and 1/4 of mint; blend until incorporated. Add remaining herbs in 3 more additions, pureeing until almost smooth after each addition. Do ahead: Can be made 3 hours ahead. Cover; chill. For beef tenderloin: Let beef stand at room temperature 1 hour. Prepare barbecue (high heat). Pat beef dry with paper towels; brush with oil. Sprinkle all over with spice rub, using all of mixture (coating will be thick). Place beef on grill; sear 2 minutes on each side. Reduce heat to medium-high. Grill uncovered until instant-read thermometer inserted into thickest part of beef registers 130F for medium-rare, moving beef to cooler part of grill as needed to prevent burning, and turning occasionally, about 40 minutes. Transfer to platter; cover loosely with foil and let rest 15 minutes. Thinly slice beef crosswise. Serve with chimichurri sauce. *Available at specialty foods stores and from tienda.com.',\r\n};\r\n\r\nexport default Recipe;\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport RecipeView from '../RecipeInformation';\r\nimport StyledRecipePage from './style';\r\nimport NavBar from '../NavBar';\r\nimport Recipe from './recipe-test';\r\n\r\nclass RecipePage extends React.Component {\r\n  state = {\r\n    Recipes: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getRecipeInfo();\r\n  }\r\n\r\n  getRecipeInfo = () => {\r\n    const recipeId = this.props.match.params.id; // eslint-disable-line\r\n    const queryString = `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${recipeId}/information`;\r\n    if (recipeId) {\r\n      axios\r\n        .get(queryString, {\r\n          headers: {\r\n            'X-RapidAPI-Key':\r\n              'otjDFlURFBmshZdSBfRqP6wDBbczp1XNiRzjsnRi3Iqm6V0ZI7',\r\n          },\r\n        })\r\n        .then(res => {\r\n          const recipeData = res.data;\r\n          this.setState({ Recipes: recipeData });\r\n        });\r\n    } else {\r\n      this.setState({ Recipes: Recipe });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      image,\r\n      instructions,\r\n      extendedIngredients,\r\n      readyInMinutes,\r\n      sourceUrl,\r\n      creditText,\r\n      vegetarian,\r\n      vegan,\r\n      glutenFree,\r\n      dairyFree,\r\n      veryHealthy,\r\n      cheap,\r\n      sustainable,\r\n      lowFodmap,\r\n      ketogenic,\r\n      whole30,\r\n      veryPopular,\r\n    } = this.state.Recipes; // eslint-disable-line react/destructuring-assignment\r\n\r\n    const dietaryRestriction = {\r\n      vegetarian,\r\n      vegan,\r\n      glutenFree,\r\n      dairyFree,\r\n      veryHealthy,\r\n      cheap,\r\n      sustainable,\r\n      lowFodmap,\r\n      ketogenic,\r\n      whole30,\r\n      veryPopular,\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar title=\"Citrus\" />\r\n        <StyledRecipePage>\r\n          <RecipeView\r\n            title={title}\r\n            image={image}\r\n            instructions={instructions}\r\n            ingredients={extendedIngredients}\r\n            readyIn={readyInMinutes}\r\n            originalUrl={sourceUrl}\r\n            creditText={creditText}\r\n            dietaryRestrictions={dietaryRestriction}\r\n          />\r\n        </StyledRecipePage>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// RecipePage.propTypes = {\r\n//   title: PropTypes.string\r\n// };\r\n\r\nexport default RecipePage;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledIngredientSearch = styled.div`\r\n  background-image: linear-gradient(#0097a7, #4fbf9e, #ccff90);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 120vh;\r\n`;\r\n\r\nexport default StyledIngredientSearch;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  MuiThemeProvider,\r\n  createMuiTheme,\r\n  withStyles,\r\n} from '@material-ui/core/styles';\r\nimport Icon from '../StatusIcon';\r\nimport Inventory from '../FridgeList/inventory';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: '#0097A7' },\r\n  },\r\n});\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    width: '100%',\r\n    alignContent: 'center',\r\n  },\r\n  list: {\r\n    background: '#FFF',\r\n    overflowY: 'scroll',\r\n    margin: '8px',\r\n    borderRadius: '4px',\r\n    width: '75vw',\r\n    maxHeight: '600px',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  card: {\r\n    // maxWidth: '600px',\r\n    margin: 8,\r\n    backgroundColor: 'white',\r\n    padding: 8,\r\n    borderRadius: 4,\r\n    alignContent: 'center',\r\n  },\r\n  chip: {\r\n    margin: '8px',\r\n    fontSize: '18px',\r\n    backgroundColor: '#0097A7',\r\n    color: 'white',\r\n    border: 'none',\r\n  },\r\n  div: {\r\n    margin: '8px',\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\n// Alphabetize inventory by name\r\nfunction compare(a, b) {\r\n  if (a.name < b.name) return -1;\r\n  if (a.name > b.name) return 1;\r\n  return 0;\r\n}\r\n\r\n// empty arrays for selected and checked\r\nconst selected = [];\r\nconst newChecked = [];\r\n\r\n// link on submit sends 'selected' array to display recipe cards\r\nconst newTo = {\r\n  pathname: '/browse',\r\n  selected: { selected },\r\n};\r\n\r\nclass SelectFridge extends React.Component {\r\n  state = {\r\n    checked: [0],\r\n  };\r\n\r\n  handleToggle = item => () => {\r\n    const { checked } = this.state;\r\n    const currentIndex = checked.indexOf(item);\r\n    if (currentIndex === -1) {\r\n      newChecked.push(item);\r\n      selected.push(item.name);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n      selected.splice(currentIndex, 1);\r\n    }\r\n\r\n    this.setState({\r\n      checked: newChecked,\r\n    });\r\n  };\r\n\r\n  handleDelete = item => () => {\r\n    const { checked } = this.state;\r\n    const currentIndex = checked.indexOf(item);\r\n    selected.splice(currentIndex);\r\n    newChecked.splice(currentIndex);\r\n\r\n    this.setState({\r\n      checked: newChecked,\r\n    });\r\n\r\n    this.handleToggle();\r\n  };\r\n\r\n  render() {\r\n    const inventory = Inventory.fridge;\r\n    const { classes } = this.props;\r\n    const { checked } = this.state;\r\n    inventory.sort(compare);\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.card}>\r\n          <Typography\r\n            className={classes.title}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            Search Recipe by Ingredients\r\n          </Typography>\r\n          <div className={classes.div}>\r\n            {selected.map(item => (\r\n              <Chip\r\n                label={item}\r\n                id={item}\r\n                className={classes.chip}\r\n                variant=\"outlined\"\r\n                onDelete={this.handleDelete(item)}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className={classes.div}>\r\n            <Link to={newTo} style={{ textDecoration: 'none' }}>\r\n              <Button\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                style={{ backgroundColor: '#ff9966', color: 'white' }}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className={classes.div}>\r\n          <List className={classes.list}>\r\n            {inventory.map(item => (\r\n              <ListItem\r\n                key={item.name}\r\n                button\r\n                onClick={this.handleToggle(item)}\r\n              >\r\n                <Icon status={item.status} />\r\n                <ListItemText primary={item.name} />\r\n                <ListItemSecondaryAction>\r\n                  <MuiThemeProvider theme={theme}>\r\n                    <Checkbox\r\n                      onChange={this.handleToggle(item)}\r\n                      checked={{ checked }.checked.indexOf(item) !== -1}\r\n                      key={item.name}\r\n                      color=\"primary\"\r\n                    />\r\n                  </MuiThemeProvider>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelectFridge.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SelectFridge);\r\n","import React from 'react';\r\nimport StyledIngredientSearch from './style';\r\nimport NavBar from '../NavBar';\r\nimport SelectFridge from '../SelectFridge';\r\n// Database Queries go here\r\n// const saveRecipe = (props) => {\r\n//     API.saveRecipe({\r\n//         title: props.title,\r\n//         ingredients: props.ingredients,\r\n//         instructions: props.instructions,\r\n//         // TODO change accountId to real value once possible\r\n//         accountId: 't0d0r3m0v3l8rt3st64'\r\n//       })\r\n// }\r\n\r\n// Event.target\r\n\r\nclass SearchByIngredient extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar title=\"Citrus\" />\r\n        <StyledIngredientSearch>\r\n          <div>\r\n            <SelectFridge />\r\n          </div>\r\n        </StyledIngredientSearch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchByIngredient;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Fridge from './components/Fridge';\r\nimport Browse from './components/Browse';\r\nimport Welcome from './components/Welcome';\r\nimport Login from './components/Login';\r\nimport Home from './components/Home';\r\nimport EnterRecipe from './components/EnterRecipe';\r\nimport RecipePage from './components/RecipePage';\r\nimport SearchByIngredient from './components/SearchByIngredient';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const App = () => (\r\n      <React.Fragment>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Welcome} />\r\n          <Route exact path=\"/welcome\" component={Welcome} />\r\n          <Route exact path=\"/fridge\" component={Fridge} />\r\n          <Route exact path=\"/browse\" component={Browse} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/enterrecipe\" component={EnterRecipe} />\r\n          <Route\r\n            exact\r\n            path=\"/searchbyingredient\"\r\n            component={SearchByIngredient}\r\n          />\r\n          <Route exact path=\"/recipe/:id\" component={RecipePage} />\r\n          <Route path=\"/home\" component={Home} />\r\n        </Switch>\r\n      </React.Fragment>\r\n    );\r\n\r\n    return (\r\n      <Switch>\r\n        <App />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}